// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace MinimalAPIs.MinimalAPIs.Models;

public partial class AppDbContext : DbContext
{
    public AppDbContext()
    {
    }

    public AppDbContext(DbContextOptions<AppDbContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Coupon> Coupons { get; set; }

    public virtual DbSet<CouponRedemption> CouponRedemptions { get; set; }

    public virtual DbSet<CouponType> CouponTypes { get; set; }

    public virtual DbSet<Promotion> Promotions { get; set; }

    public virtual DbSet<PromotionEvent> PromotionEvents { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
        => optionsBuilder.UseSqlServer("Data Source=fuen31-t3.database.windows.net;Initial Catalog=ProjectDB;Persist Security Info=True;User ID=zlk;Password=fuen31t3!;Encrypt=True");

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.UseCollation("Chinese_Taiwan_Stroke_CI_AS_KS_WS");

        modelBuilder.Entity<Coupon>(entity =>
        {
            entity.HasKey(e => e.CouponID).HasName("PK__Coupons__384AF1DA6EFC472C");

            entity.Property(e => e.AvailabilityCount).HasDefaultValueSql("((100))");
            entity.Property(e => e.CouponTypeId).HasDefaultValueSql("((1))");
            entity.Property(e => e.DiscountValue).HasDefaultValueSql("((10))");
            entity.Property(e => e.PromotionID).HasDefaultValueSql("((1))");
            entity.Property(e => e.Valid).HasDefaultValueSql("((1))");

            entity.HasOne(d => d.CouponType).WithMany(p => p.Coupons)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Coupons_CouponTypes");
        });

        modelBuilder.Entity<CouponRedemption>(entity =>
        {
            entity.HasKey(e => e.UsageID).HasName("PK__CouponRe__29B197C04755808C");

            entity.HasOne(d => d.Coupon).WithMany(p => p.CouponRedemptions)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__CouponRed__Coupo__0B5CAFEA");
        });

        modelBuilder.Entity<CouponType>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__CouponTy__3214EC07289353B6");
        });

        modelBuilder.Entity<Promotion>(entity =>
        {
            entity.HasKey(e => e.PromotionID).HasName("PK__Promotio__52C42F2FFEA38B1F");
        });

        modelBuilder.Entity<PromotionEvent>(entity =>
        {
            entity.HasKey(e => e.EventID).HasName("PK__Promotio__7944C8709C67447C");

            entity.Property(e => e.DiscountRate).HasDefaultValueSql("((1))");
            entity.Property(e => e.EventSerialNumber).HasDefaultValueSql("(N'EventCode')");
            entity.Property(e => e.OfferStatus).HasDefaultValueSql("(N'未啟用')");
            entity.Property(e => e.StartDate).HasDefaultValueSql("(((2024)/(2))/(6))");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}